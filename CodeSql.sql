-- MySQL Script generated by MySQL Workbench
-- Mon Jan  8 10:25:34 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Reservation
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Reservation
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Reservation` DEFAULT CHARACTER SET utf8 ;
USE `Reservation` ;

-- -----------------------------------------------------
-- Table `Reservation`.`Parking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Parking` (
  `idParking` INT NOT NULL AUTO_INCREMENT,
  `PlaceDisponible` BOOLEAN NOT NULL,
  `Prix` FLOAT NOT NULL,
  PRIMARY KEY (`idParking`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `Reservation`.`AppartementMaison`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`AppartementMaison` (
  `idAppartement` INT NOT NULL AUTO_INCREMENT,
  `NomAppartement` VARCHAR(50) NOT NULL,
  `Pays` VARCHAR(50) NOT NULL,
  `Adresse` VARCHAR(50) NOT NULL,
  `EmplacementClient` VARCHAR(50) NOT NULL,
  `NbPersonneHebergeable` INT NOT NULL,
  `NbSalleDeBains` INT NOT NULL,
  `Superficie` INT NOT NULL,
  `Commentaire` LONGTEXT NULL,
  `NbPhotos` INT NULL DEFAULT 1,
  `Parking_idParking` INT NULL,
  PRIMARY KEY (`idAppartement`),
  CONSTRAINT `fk_AppartementMaison_Parking`
    FOREIGN KEY (`Parking_idParking`)
    REFERENCES `Reservation`.`Parking` (`idParking`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_AppartementMaison_Parking_idx` ON `Reservation`.`AppartementMaison` (`Parking_idParking` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`TypeEquipement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`TypeEquipement` (
  `CuisineEntretien` VARCHAR(100) NULL,
  `Divertissement` VARCHAR(100) NULL,
  `VueExtérieur` VARCHAR(100) NULL,
  `AutreCommodités` VARCHAR(100) NULL,
  `AppartementMaison_idAppartement` INT NOT NULL,
  CONSTRAINT `fk_TypeEquipement_AppartementMaison1`
    FOREIGN KEY (`AppartementMaison_idAppartement`)
    REFERENCES `Reservation`.`AppartementMaison` (`idAppartement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_TypeEquipement_AppartementMaison1_idx` ON `Reservation`.`TypeEquipement` (`AppartementMaison_idAppartement` ASC) ;

-- -----------------------------------------------------
-- Table `Reservation`.`Studio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Studio` (
  `IdStudio` INT NULL,
  `NbLit` INT NULL DEFAULT 0,
  `Capacite` INT NULL DEFAULT 1,
  `Superficie` INT NOT NULL,
  PRIMARY KEY (`IdStudio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Caracteristique`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Caracteristique` (
  `IdCaracteristique` INT NOT NULL,
  `Equipement` LONGTEXT NULL,
  ` HoraireArrivee` DATE NOT NULL,
  `HoraireDepart` DATE NOT NULL,
  PRIMARY KEY (`IdCaracteristique`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Appartement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Appartement` (
  `IdAppartement` INT NOT NULL,
  `NbLit` INT NULL DEFAULT 0,
  `Capacite` INT NULL DEFAULT 1,
  `Superficie` INT NOT NULL,
  `InfoSDB` VARCHAR(100) NULL,
  `InfoPreparationRepas` VARCHAR(100) NULL,
  `TypeAppartement` INT NULL DEFAULT 1,
  `TarifNuit` FLOAT NULL DEFAULT 0.0,
  `TarifRemboursable` BOOLEAN NULL DEFAULT 0,
  `Caracteristique_IdCaracteristique` INT NOT NULL,
  PRIMARY KEY (`IdAppartement`),
  CONSTRAINT `fk_Appartement_Caracteristique1`
    FOREIGN KEY (`Caracteristique_IdCaracteristique`)
    REFERENCES `Reservation`.`Caracteristique` (`IdCaracteristique`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Appartement_Caracteristique1_idx` ON `Reservation`.`Appartement` (`Caracteristique_IdCaracteristique` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`AppartHotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`AppartHotel` (
  `IdAppartHotel` INT NOT NULL AUTO_INCREMENT,
  `NomAppartHotel` VARCHAR(50) NOT NULL,
  `Localite` VARCHAR(100) NOT NULL,
  `Adresse` VARCHAR(100) NOT NULL,
  `TypeLogement` VARCHAR(100) NOT NULL,
  `DeujeuneServi` BOOLEAN NULL DEFAULT 0,
  `LanguesPersonnel` LONGTEXT NOT NULL,
  `NbPhotos` INT NULL DEFAULT 1,
  `Studio_IdStudio` INT NOT NULL,
  `Appartement_NomAppartement` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`IdAppartHotel`),
  CONSTRAINT `fk_AppartHotel_Studio1`
    FOREIGN KEY (`Studio_IdStudio`)
    REFERENCES `Reservation`.`Studio` (`IdStudio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AppartHotel_Appartement1`
    FOREIGN KEY (`Appartement_NomAppartement`)
    REFERENCES `Reservation`.`Appartement` (`IdAppartement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_AppartHotel_Studio1_idx` ON `Reservation`.`AppartHotel` (`Studio_IdStudio` ASC) ;

CREATE INDEX `fk_AppartHotel_Appartement1_idx` ON `Reservation`.`AppartHotel` (`Appartement_NomAppartement` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`TypeChambre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`TypeChambre` (
  `NomTypeChambre` VARCHAR(30) NOT NULL,
  `NombreLit` INT NULL DEFAULT 1,
  PRIMARY KEY (`NomTypeChambre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Chambre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Chambre` (
  `IdChambre` INT NOT NULL,
  `NomChambre` VARCHAR(30) NOT NULL,
  `Superficie` INT NOT NULL,
  `Vue` MEDIUMTEXT NOT NULL,
  `TarifPersonne` FLOAT NULL DEFAULT 0.0,
  `TarifNuit` FLOAT NULL DEFAULT 0.0,
  `EquipementChambre` LONGTEXT NULL,
  `TypeChambre_NomTypeChambre` VARCHAR(30) NOT NULL,
  `Caracteristique_IdCaracteristique` INT NOT NULL,
  PRIMARY KEY (`IdChambre`),
  CONSTRAINT `fk_Chambre_TypeChambre1`
    FOREIGN KEY (`TypeChambre_NomTypeChambre`)
    REFERENCES `Reservation`.`TypeChambre` (`NomTypeChambre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Chambre_Caracteristique1`
    FOREIGN KEY (`Caracteristique_IdCaracteristique`)
    REFERENCES `Reservation`.`Caracteristique` (`IdCaracteristique`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Chambre_TypeChambre1_idx` ON `Reservation`.`Chambre` (`TypeChambre_NomTypeChambre` ASC) ;

CREATE INDEX `fk_Chambre_Caracteristique1_idx` ON `Reservation`.`Chambre` (`Caracteristique_IdCaracteristique` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`LitAppoint`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`LitAppoint` (
  `LitAppoint` BOOLEAN NOT NULL DEFAULT 0,
  `TarifNuitAdulte` FLOAT NOT NULL,
  PRIMARY KEY (`LitAppoint`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`ChaineHoteliere`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`ChaineHoteliere` (
  `IdChaineHoteliere` INT NOT NULL,
  `NomChaineHoteliere` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdChaineHoteliere`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`InformationContact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`InformationContact` (
  `NumTel` VARCHAR(30) NOT NULL,
  `NumTelSecond` VARCHAR(30) NULL,
  `NomContact` VARCHAR(100) NULL,
  PRIMARY KEY (`NumTel`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Hotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Hotel` (
  `IdHotel` INT NOT NULL,
  `Nom` VARCHAR(50) NOT NULL,
  `Localite` VARCHAR(100) NOT NULL,
  `Adresse` VARCHAR(100) NOT NULL,
  `NbEtoiles` INT NULL DEFAULT 1,
  `NavetteAeroport` BOOLEAN NULL DEFAULT 0,
  `RestaurationSurPlace` BOOLEAN NULL DEFAULT 0,
  `DejeuneServi` BOOLEAN NULL DEFAULT 0,
  `LanguesPersonnel` LONGTEXT NOT NULL,
  `InformationContact_NumTel` VARCHAR(30) NOT NULL,
  `LitAppoint_idLitAppoint` VARCHAR(30) NOT NULL,
  `Chambre_NomChambre` VARCHAR(30) NOT NULL,
  `ChaineHoteliere_IdChaineHoteliere` INT NULL,
  PRIMARY KEY (`IdHotel`),
  CONSTRAINT `fk_Hotel_LitAppoint1`
    FOREIGN KEY (`LitAppoint_idLitAppoint`)
    REFERENCES `Reservation`.`LitAppoint` (`LitAppoint`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hotel_Chambre1`
    FOREIGN KEY (`Chambre_NomChambre`)
    REFERENCES `Reservation`.`Chambre` (`NomChambre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hotel_ChaineHoteliere1`
    FOREIGN KEY (`ChaineHoteliere_IdChaineHoteliere`)
    REFERENCES `Reservation`.`ChaineHoteliere` (`IdChaineHoteliere`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hotel_InformationContact1`
    FOREIGN KEY (`InformationContact_NumTel`)
    REFERENCES `Reservation`.`InformationContact` (`NumTel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Hotel_LitAppoint1_idx` ON `Reservation`.`Hotel` (`LitAppoint_idLitAppoint` ASC) ;

CREATE INDEX `fk_Hotel_Chambre1_idx` ON `Reservation`.`Hotel` (`Chambre_NomChambre` ASC) ;

CREATE INDEX `fk_Hotel_ChaineHoteliere1_idx` ON `Reservation`.`Hotel` (`ChaineHoteliere_IdChaineHoteliere` ASC) ;

CREATE INDEX `fk_Hotel_InformationContact1_idx` ON `Reservation`.`Hotel` (`InformationContact_NumTel` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`Regles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Regles` (
  `HerbergementFumeur` BOOLEAN NULL,
  `AnimauxAutorises` BOOLEAN NULL,
  `EnfantsAutorises` BOOLEAN NULL,
  `FetesAutorises` BOOLEAN NULL,
  `AppartementMaison_NomAppartement` VARCHAR(30) NOT NULL,
  `AppartHotel_NomAppartHotel` VARCHAR(30) NOT NULL,
  `Hotel_NomHotel` VARCHAR(30) NOT NULL,
  `Appartement_IdAppartement` INT NOT NULL,
  CONSTRAINT `fk_Regles_AppartementMaison1`
    FOREIGN KEY (`AppartementMaison_NomAppartement`)
    REFERENCES `Reservation`.`AppartementMaison` (`idAppartement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Regles_AppartHotel1`
    FOREIGN KEY (`AppartHotel_NomAppartHotel`)
    REFERENCES `Reservation`.`AppartHotel` (`IdAppartHotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Regles_Hotel1`
    FOREIGN KEY (`Hotel_NomHotel`)
    REFERENCES `Reservation`.`Hotel` (`Nom`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Regles_Appartement1`
    FOREIGN KEY (`Appartement_IdAppartement`)
    REFERENCES `Reservation`.`Appartement` (`IdAppartement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Regles_AppartementMaison1_idx` ON `Reservation`.`Regles` (`AppartementMaison_NomAppartement` ASC) ;

CREATE INDEX `fk_Regles_AppartHotel1_idx` ON `Reservation`.`Regles` (`AppartHotel_NomAppartHotel` ASC) ;

CREATE INDEX `fk_Regles_Hotel1_idx` ON `Reservation`.`Regles` (`Hotel_NomHotel` ASC) ;

CREATE INDEX `fk_Regles_Appartement1_idx` ON `Reservation`.`Regles` (`Appartement_IdAppartement` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`Herbergeur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Herbergeur` (
  `idHerbergeur` INT NOT NULL,
  `Nom` VARCHAR(50) NOT NULL,
  `Prenom` VARCHAR(50) NOT NULL,
  `Adresse` VARCHAR(50) NOT NULL,
  `Telephone` VARCHAR(15) NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `MotDePasse` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idHerbergeur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Hebergements`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Hebergements` (
  `idHebergements` INT NOT NULL,
  `Inscrit` VARCHAR(50) NOT NULL COMMENT 'Inscrit sur Airbnb ou TripAdvisor',
  `URL` VARCHAR(100) NOT NULL,
  `Herbergeur_idHerbergeur` INT NOT NULL,
  `AppartementMaison_idAppartement` INT NOT NULL,
  `Hotel_IdHotel` INT NOT NULL,
  `AppartHotel_IdAppartHotel` INT NOT NULL,
  PRIMARY KEY (`idHebergements`),
  CONSTRAINT `fk_Hebergements_Herbergeur1`
    FOREIGN KEY (`Herbergeur_idHerbergeur`)
    REFERENCES `Reservation`.`Herbergeur` (`idHerbergeur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hebergements_AppartementMaison1`
    FOREIGN KEY (`AppartementMaison_idAppartement`)
    REFERENCES `Reservation`.`AppartementMaison` (`idAppartement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hebergements_Hotel1`
    FOREIGN KEY (`Hotel_IdHotel`)
    REFERENCES `Reservation`.`Hotel` (`IdHotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hebergements_AppartHotel1`
    FOREIGN KEY (`AppartHotel_IdAppartHotel`)
    REFERENCES `Reservation`.`AppartHotel` (`IdAppartHotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Hebergements_Herbergeur1_idx` ON `Reservation`.`Hebergements` (`Herbergeur_idHerbergeur` ASC) ;

CREATE INDEX `fk_Hebergements_AppartementMaison1_idx` ON `Reservation`.`Hebergements` (`AppartementMaison_idAppartement` ASC) ;

CREATE INDEX `fk_Hebergements_Hotel1_idx` ON `Reservation`.`Hebergements` (`Hotel_IdHotel` ASC) ;

CREATE INDEX `fk_Hebergements_AppartHotel1_idx` ON `Reservation`.`Hebergements` (`AppartHotel_IdAppartHotel` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`InfoPersonelle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`InfoPersonelle` (
  `idClient` INT NOT NULL,
  `DateNaissance` DATE NOT NULL,
  `Sexe` VARCHAR(20) NOT NULL,
  `Adresse` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idClient`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`InfoPaiement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`InfoPaiement` (
  `idCarte` INT NOT NULL,
  `NumCarte` INT NOT NULL,
  `DateExpiration` DATE NOT NULL,
  `Cryptogramme` INT NOT NULL,
  PRIMARY KEY (`idCarte`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Preference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Preference` (
  `idClient` INT NOT NULL,
  `Langue` LONGTEXT NOT NULL,
  `Devise` VARCHAR(50) NOT NULL COMMENT 'Pour paiement (euro, dollars, etc.)',
  `InfoPaiement_idCarte` INT NOT NULL,
  PRIMARY KEY (`idClient`),
  CONSTRAINT `fk_Preference_InfoPaiement1`
    FOREIGN KEY (`InfoPaiement_idCarte`)
    REFERENCES `Reservation`.`InfoPaiement` (`idCarte`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Preference_InfoPaiement1_idx` ON `Reservation`.`Preference` (`InfoPaiement_idCarte` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Client` (
  `idClient` INT NOT NULL,
  `Nom` VARCHAR(50) NOT NULL,
  `Prenom` VARCHAR(50) NOT NULL,
  `Telephone` VARCHAR(15) NOT NULL,
  `Mail` VARCHAR(50) NOT NULL,
  `MotDePasse` VARCHAR(50) NOT NULL,
  `InfoPersonelle_idClient` INT NULL,
  `Preference_idClient` INT NULL,
  PRIMARY KEY (`idClient`),
  CONSTRAINT `fk_Client_InfoPersonelle1`
    FOREIGN KEY (`InfoPersonelle_idClient`)
    REFERENCES `Reservation`.`InfoPersonelle` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Client_Preference1`
    FOREIGN KEY (`Preference_idClient`)
    REFERENCES `Reservation`.`Preference` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Client_InfoPersonelle1_idx` ON `Reservation`.`Client` (`InfoPersonelle_idClient` ASC) ;

CREATE INDEX `fk_Client_Preference1_idx` ON `Reservation`.`Client` (`Preference_idClient` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`Avion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Avion` (
  `idAvion` INT NOT NULL,
  `Type` VARCHAR(50) NOT NULL,
  `NbSiege` INT NOT NULL,
  PRIMARY KEY (`idAvion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Vol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Vol` (
  `idVol` INT NOT NULL,
  `AeroportDepart` VARCHAR(100) NOT NULL,
  `AeroportArrivee` VARCHAR(100) NOT NULL,
  `HeureDepart` DATE NOT NULL,
  `HeureArrivee` DATE NOT NULL,
  `Avion_idAvion` INT NOT NULL,
  PRIMARY KEY (`idVol`),
  CONSTRAINT `fk_Vol_Avion1`
    FOREIGN KEY (`Avion_idAvion`)
    REFERENCES `Reservation`.`Avion` (`idAvion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Vol_Avion1_idx` ON `Reservation`.`Vol` (`Avion_idAvion` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`TarifBagage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`TarifBagage` (
  `idTarifBagage` INT NOT NULL AUTO_INCREMENT COMMENT 'On utilise le id comme nombre de bagages',
  `Tarif` INT NOT NULL,
  PRIMARY KEY (`idTarifBagage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`Siege`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`Siege` (
  `idSiege` INT NOT NULL,
  `NumSiege` INT NOT NULL,
  `Classe` VARCHAR(50) NOT NULL,
  `CoteHublot` BOOLEAN NOT NULL,
  `BagageInclus` BOOLEAN NOT NULL,
  `Tarif` FLOAT NULL DEFAULT 0.0,
  `Avion_idAvion` INT NOT NULL,
  `TarifBagage_idTarifBagage` INT NOT NULL,
  PRIMARY KEY (`idSiege`),
  CONSTRAINT `fk_Siege_Avion1`
    FOREIGN KEY (`Avion_idAvion`)
    REFERENCES `Reservation`.`Avion` (`idAvion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Siege_TarifBagage1`
    FOREIGN KEY (`TarifBagage_idTarifBagage`)
    REFERENCES `Reservation`.`TarifBagage` (`idTarifBagage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Siege_Avion1_idx` ON `Reservation`.`Siege` (`Avion_idAvion` ASC) ;

CREATE INDEX `fk_Siege_TarifBagage1_idx` ON `Reservation`.`Siege` (`TarifBagage_idTarifBagage` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`ReservationHebergement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`ReservationHebergement` (
  `idReservation` INT NOT NULL,
  `DateDepart` DATE NOT NULL,
  `DateArrivee` DATE NOT NULL,
  `NbAdultes` INT NULL DEFAULT 1,
  `NbEnfants` INT NULL DEFAULT 0,
  `VilleEtPays` VARCHAR(100) NOT NULL,
  `Client_idClient` INT NOT NULL,
  `Hebergements_idHebergements` INT NOT NULL,
  PRIMARY KEY (`idReservation`),
  CONSTRAINT `fk_Reservation_Client1`
    FOREIGN KEY (`Client_idClient`)
    REFERENCES `Reservation`.`Client` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reservation_Hebergements1`
    FOREIGN KEY (`Hebergements_idHebergements`)
    REFERENCES `Reservation`.`Hebergements` (`idHebergements`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Reservation_Client1_idx` ON `Reservation`.`ReservationHebergement` (`Client_idClient` ASC) ;

CREATE INDEX `fk_Reservation_Hebergements1_idx` ON `Reservation`.`ReservationHebergement` (`Hebergements_idHebergements` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`ReservationVol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`ReservationVol` (
  `idReservationVol` INT NOT NULL,
  `Type` VARCHAR(50) NOT NULL COMMENT 'Aller simple ou aller-retour',
  `Classe` VARCHAR(50) NOT NULL,
  `DateDepart` DATE NOT NULL,
  `DateArrivee` DATE NOT NULL,
  `NbAdultes` INT NULL DEFAULT 1,
  `NbEnfants` INT NULL DEFAULT 0,
  `Escale` BOOLEAN NOT NULL,
  `Vol_idVol` INT NOT NULL,
  `Client_idClient` INT NOT NULL,
  PRIMARY KEY (`idReservationVol`),
  CONSTRAINT `fk_ReservationVol_Vol1`
    FOREIGN KEY (`Vol_idVol`)
    REFERENCES `Reservation`.`Vol` (`idVol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReservationVol_Client1`
    FOREIGN KEY (`Client_idClient`)
    REFERENCES `Reservation`.`Client` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ReservationVol_Vol1_idx` ON `Reservation`.`ReservationVol` (`Vol_idVol` ASC) ;

CREATE INDEX `fk_ReservationVol_Client1_idx` ON `Reservation`.`ReservationVol` (`Client_idClient` ASC) ;


-- -----------------------------------------------------
-- Table `Reservation`.`FormulePack`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`FormulePack` (
  `idFormulePack` INT NOT NULL,
  `Nom` VARCHAR(50) NOT NULL COMMENT 'Exemple : \"Pack de voyage Extra\"',
  `DateDepart` DATE NOT NULL,
  `DateArrivee` DATE NOT NULL,
  `Destination` VARCHAR(75) NOT NULL,
  `Tarif` FLOAT NULL DEFAULT 0.0,
  PRIMARY KEY (`idFormulePack`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Reservation`.`ReservationComplete`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Reservation`.`ReservationComplete` (
  `idReservationComplete` INT NOT NULL,
  `ReservationVol_idReservationVol` INT NOT NULL,
  `ReservationHebergement_idReservation` INT NOT NULL,
  `Client_idClient` INT NOT NULL,
  `FormulePack_idFormulePack` INT NOT NULL,
  PRIMARY KEY (`idReservationComplete`),
  CONSTRAINT `fk_ReservationComplete_ReservationVol1`
    FOREIGN KEY (`ReservationVol_idReservationVol`)
    REFERENCES `Reservation`.`ReservationVol` (`idReservationVol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReservationComplete_ReservationHebergement1`
    FOREIGN KEY (`ReservationHebergement_idReservation`)
    REFERENCES `Reservation`.`ReservationHebergement` (`idReservation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReservationComplete_Client1`
    FOREIGN KEY (`Client_idClient`)
    REFERENCES `Reservation`.`Client` (`idClient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ReservationComplete_FormulePack1`
    FOREIGN KEY (`FormulePack_idFormulePack`)
    REFERENCES `Reservation`.`FormulePack` (`idFormulePack`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ReservationComplete_ReservationVol1_idx` ON `Reservation`.`ReservationComplete` (`ReservationVol_idReservationVol` ASC) ;

CREATE INDEX `fk_ReservationComplete_ReservationHebergement1_idx` ON `Reservation`.`ReservationComplete` (`ReservationHebergement_idReservation` ASC) ;

CREATE INDEX `fk_ReservationComplete_Client1_idx` ON `Reservation`.`ReservationComplete` (`Client_idClient` ASC) ;

CREATE INDEX `fk_ReservationComplete_FormulePack1_idx` ON `Reservation`.`ReservationComplete` (`FormulePack_idFormulePack` ASC) ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

insert into Parking values (
  (0001, 0, 19.45),
  (0002, 1, 19.56),
  (0003, 1, 13.45),
  (0004, 0, 16.10),
  (0005, 0, 19.99)
);

insert into AppartementMaison values (
  (0001, "Amen", "Afghanistan", "30 Rue de la guerre", "Parking", 2, 1, 90, "C’est bien", 2, 0001 ),
  (0002, "John", "Bénin", "30 Rue Aidjedo", "Parking", 5, 2, 100, "Sale", 6, 0002),
  (0003, "Enzo", "Algérie", "23 Rue Kebab", "Parking", 7, 7, 250, "Très grand", 9, 0002 ),
  (0004, "Nicolas", "Afghanistan", "30 Rue de la guerre", "Parking", 6, 5, 140, "C’est bien", 8, 0004 ),
  (0005, "Cedric", "France" , "90 Rue de la sainte loire", "Parking", 2, 1, 100, "Spacieux", 5, 0005)
);

insert into TypeEquipement values (
  ("Cuisine", "Télévision, piscine", "Balcon, mini-bar", "Chauffage"),
  ("Lave-Linge", "Piscine, sauna", "Terrasse", "Climatiseur, chauffage"),
  ("Kitchenette", "Télévision, mini-bar", "Balcon, terrasse", "Chauffage, connexion wifi"),
  ("Cuisine, lave-linge", "Piscine, mini-bar", "Balcon, vue sur jardin", "Connexion wifi"),
  ("Kitchenette, lave-linge", "Mini-bar, sauna", "Vue sur jardin, terrasse", "climatiseur")
);

insert into Studio values (
  (0001, 2, 2, 20),
  (0002, 3, 3, 98),
  (0003, 4, 4, 100),
  (0004, 1, 1, 18),
  (0005, 2, 2, 100)
);

insert into Caracteristique values (
  (0001, "Cuisine",  '12-12-2012', '12-01-2013'),
  (0002, "Lave-Linge",  '12-08-2013', '12-10-2013'),
  (0003, "Cuisine",  '10-09-2022', '12-01-2023'),
  (0004, "Lave-Linge",  '03-01-2019', '09-11-2020'),
  (0005, "Cuisine",  '01-11-2023', '09-01-2020')
);

insert into Appartement values (
  (0001, 3, 3, 56, "Douche", "Le client aime le poisson", 1, 12.65, 0),
  (0002, 5, 5, 67, "Baignoire, seche-cheveux", "Le client aime les oiseaux", 2, 156.90, 0),
  (0003, 8, 8, 100, "Douche, serviettes de bains", "Le client aime les fruits de mers", 1, 234.89, 1),
  (0004, 4, 4, 90, "Douche seche-cheveux", "Le client aime la vache", 3, 456.99, 1),
  (0005, 7, 7, 120, "Baignoire, serviettes de bains", "Le client Mange tout", 3, 456.99, 0)
);

insert into AppartHotel values (
  (0001, "Enzo", "Bourge", "34 rue des rois", "T1", 0, "Anglais", 10, 0001),
  (0002, "Amen", "Nevers", "20 rue Charles Roy", "T1", 0, "Anglais", 10, 0002),
  (0003, "John", "Moulin", "24 rue des boss", "T2", 1, "Italien", 12, 0003),
  (0004, "Albertine", "Lyon", "34 rue des Saints", "T3", 1, "Espagnol", 13, 0004),
  (0005, "Ninho", "Paris", "34 rue des Rappeur", "T2", 0, "Français", 9, 0005)
);

insert into TypeChambre values (
  ("Prémium", 9),
  ("Haute classe", 8),
  ("Haute classe", 7),
  ("Classe Medium", 10),
  ("Basse Classe", 11)
);

insert into Chambre values (
  (0001, "Sainte Bernadette", 34, "Mer", 110.45, 23.40, "Baignoire, bouilloire électrique", "Prémium", 0001),
  (0002, "Saint Amen", 23, "Océan", 120.45, 43.40, "Télévision, balcon, terrasse", "Haute classe", 0002),
  (0003, "Saint Louis", 45, "Mer", 210.45, 110.40, "Baignoire, vue, terrasse", "Haute classe", 0003),
  (0004, "Grand Enzo", 60, "Piscine", 120.45, 29.40, "Baignoire, télévision", "Classe Medium", 0004),
  (0002, "Elancé John", 89, "Océan", 1100.45, 200.40, "Balcon, terrasse", "Basse Classe", 0005)
);

insert into LitAppoint values (
  (1, 13.87),
  (1, 14.89),
  (0, 13.80),
  (0, 110.20),
  (0, 23.90)
);

insert into ChaineHoteliere values (
  (0001, "Le prestige"),
  (0002, "La classe"),
  (0003, "La base"),
  (0004, "L’aigle"),
  (0005, "Bien loti")
);

insert into InformationContact values (
  ("07.48.58.96.13", "07.48.98.91.13",  "Amen"),
  ("07.48.52.96.13", "07.48.98.91.13", "Enzo"),
  ("06.48.50.96.13", "07.48.98.91.13",  "Cédric"),
  ("06.48.58.99.13", "07.48.98.91.13",  "John"),
  ("06.48.58.97.13", "07.48.98.11.3",  "Albertine")
);

insert into Hotel values (
  (0001, "Vincent Carreaux", "Nièvre", "20 rue de la chasse", 5, 1, 1, 1, "Italien", "0001", "0001", "0001", 0001) ,
  (0002, "Mazon", "Lyon", "16 rue de la Grace", 3, 0, 1, 1, "Espagnol", "0002", "0002", "0002", 0002),
  (0003, "Aidjedo", "Cotonou", "35 rue de l’Amazone", 2, 0, 0, 1, "Français", "0003", "0003", "0003", 0003),
  (0004, "Calavi", "Azovè", "20 rue des champs", 5, 1, 1, 1, "Fon", "0004", "0004", "0004", 0004),
  (0005, "Leparadis", "Nièvre", "20 rue de la chasse", 5, 1, 1, 1, "Anglais", "0005", "0005", "0005", 0005)
);

insert into Regles values (
  (0,1,1,1, "0001", "0001", "0001", 0001),
  (0,0,0,0, "0002", "0002", "0002", 0002),
  (0,1,0,1, "0003", "0003", "0003", 0003),
  (1,1,1,1, "0004", "0004", "0004", 0004),
  (1,0,1,1, "0005", "0005", "0005", 0005)
);

insert into Herbergeur values (
  (0001, "PETIT", "Grégoire", "20 rue de la loire", "07.45.67.98.14", "bonpettit@gmail.com", "jesuispetit"),
  (0002, "GRAND", "Jude", "20 rue de la chasse", "06.44.79.90.98", "bongrand@gmail.com", "jesuisgrand"),
  (0003, "MOYEN", "Lulius", "10 rue de la salle", "07.08.76.78.89", "bonmoyen@gmail.com", "jesuismoyen"),
  (0004, "ULTRA", "Jarion", "12 rue bernard bien", "06.09.09.09.78", "bonultra@gmail.com", "jesuisultra"),
  (0005, "EXTRA", "Hilarion", "18 rue des libres", "07.09.07.67.76", "bonextra@gmail.com", "jesuisextra")
);

insert into Hebergements values (
  (0001, "Oui", "www.bien.fr", 0001, 0001, 0001, 0001),
  (0002, "Non", "www.Good.fr", 0002, 0002, 0002, 0002),
  (0003, "Non", "www.iut.fr", 0003, 0003, 0003, 0003),
  (0004, "Oui", "www.legrand.fr", 0004, 0004, 0004, 0004),
  (0005, "Oui", "www.lesrois.fr", 0005, 0005, 0005, 0005)
);

insert into InfoPersonelle values (
  (0001, '09-12-2000', "Masculin", "34 rue de la salle"),
  (0002, '10-10-2001', "Masculin", "36 rue de la cour"),
  (0003, '09-12-2002', "Masculin", "34 rue de la dame"),
  (0004, '09-12-2005', "Masculin", "15 rue des présidents"),
  (0005, '09-12-2001', "Féminin", "34 rue des grands")
);

insert into InfoPaiement values (
  (0001, 0098664334567886, '01-09-27', 897),
  (0002, 1298664334567886, '01-07-28', 908),
  (0003, 1098564334567886, '01-09-27', 097),
  (0004, 0098884334567886, '01-09-27', 787),
  (0005, 0078964334567886, '01-06-29', 657)
);

insert into Preference values (
  (0001, "Italien", "Euros", 0001),
  (0002, "Français", "Dollars", 0002),
  (0003, "Fon", "FCFA", 0003),
  (0004, "Anglais", "Dollars", 0004),
  (0005, "Français", "Euros", 0005)
);

insert into Client values (
  (0001, "LECLAIRE", "Basile", "07.89.89.76.56", "Leclaire@gmail.com", "jesuisclaire", 0001, 0001),
  (0002, "LAPAIX", "Valentin", "06.89.87.86.56", "lapaix@gmail.com", "jesuislapaix", 0002, 0002),
  (0003, "AHOUANDOGBO", "Amen", "06.56.45.34.89", "Amen@gmail.com", "jesuisamen", 0003, 0003),
  (0004, "LATAILLE", "John", "07.98.35.67.89", "john@gmail.com", "jesuisjohn", 0004, 0004),
  (0005, "LESUITE", "Enzo", "07.56.35.89.07", "enzo@gmail.com", "jesuisenzo", 0005, 0005)
);

insert into Avion values (
  (0001, "Airbus", 100),
  (0002, "Airbus", 119),
  (0003, "Airbus", 220),
  (0004, "Airbus", 300),
  (0005, "Jet", 19)
);

insert into Vol values (
  (0001, "Charledegaulle", "Cardinalbernadingantin", "12-06-2023", "13-06-2023", 0001),
  (0002, "Cardinalbernadingantin", "ORLY", "12-06-2023", "13-06-2023", 0002),
  (0003, "Charledegaulle", "Cardinalbernadingantin", "12-06-2023", "13-06-2023", 0003),
  (0004, "Washington" , "ORLY", "12-06-2023", "13-06-2023", 0004),
  (0005, "AéroportNevers" , "Cardinalbernadingantin", "12-06-2023", "13-06-2023", 0005)
);

insert into TarifBagage values (
  (0001, 10),
  (0002, 18),
  (0003, 25)
);

insert into Siege values (
  (0001, 2, "Première", 0, 1, 590.89, 0001, 1),
  (0002, 67, "Eco", 1, 0, 560.89, 0002, 2),
  (0003, 90, "Eco", 1, 0, 190.89, 0003, 3),
  (0004, 5, "Premiere", 0, 1, 590.89, 0004, 2),
  (0005, 8, "Premiere", 1, 1, 600.89, 0005, 1)
);

insert into ReservationHebergement values (
  (0001, '19-12-2019', '28-12-2019', 2, 1, 'Cotonou Bénin', 0001, 0005),
  (0002, '18-08-2019', '23-08-2019', 3, 2, 'Paris France', 0002, 0004),
  (0003, '15-01-2023', '30-01-2023', 4, 4, 'NewYork USA', 0003, 0003),
  (0004, '12-12-2023', '28-12-2023', 3, 3, 'Moulin France', 0004, 0002),
  (0005, '31-12-2023', '05-01-2024', 4, 1, 'Calavi Bénin', 0005, 0001)
);

insert into ReservationVol values (
  (0001, 'Simple', 'Premiere', '20-12-2019', '21-12-2019', 2, 1, 0, 0001),
  (0002, 'Double', 'Eco', '21-08-2019', '22-08-2019', 3, 2, 1, 0002),
  (0003, 'Simple', 'Eco', '21-01-2023', '22-01-2023', 4, 1, 0, 0003),
  (0004, 'Double', 'Premiere', '22-12-2023', '23-12-2023', 2, 1, 0, 0004),
  (0005, 'Simple', 'Premiere', '01-01-2024', '04-01-2024', 5, 2, 0, 0005)
);

insert into FormulePack values (
  (0001, "Small", '20-12-2019', '21-12-2019', "Miami", 1199.67),
  (0002, "BigSmall", '21-08-2019', '22-08-2019', "NewYork", 2000.97),
  (0003, "Medium", '21-01-2023', '22-01-2023', "Floride", 2001.67),
  (0004, "BigMedium", '22-12-2023', '23-12-2023', "Paris", 3000.99),
  (0005, "Super", '01-01-2024', '04-01-2024', "Miami", 1199.67)
);

Select nom,prenom,idClient from Client order by nom asc where idClient in ( Select Client_idClient from ReservationVol Where Vol_idVol=2);
-- si il y un accident pendant le vol 2 avoir des information sur les pasagers
Select nom,prenom,idClient from Client order by nom asc where idClient in ( Select Client_idClient from ReservationHebergement where Hebergements_idHebergements in ( select idHebergements from Hebergements where Hebergements_idAppartement in (select idAppartement from AppartementMaison where NomAppartement="Amen" )));
-- pour retrouvé les client qui été dans la chambre Amen si par exemple ils l'ont dégrader
Select idAppartement from AppartementMaison where NbPersonneHebergeable>7;
-- trouvé un appartement qui peut herberger plus de 7 personnes
Select IdAppartement from Appartement order by TarifNuit asc where TarifNuit>200;
-- afficher les  appartement du moins chere au plus chere qui coute moins de 200 euro la nuit
Update ReservationVol set Classe=1 where Client_idClient in (select idClient from Client where nom="Micallef" and Prenom="john");
-- surclasser le client john Micallef
Update ReservationHebergement set DateArrivee='19-12-2019' where Client_idClient in (select idClient from Client where nom="Micallef" and Prenom="john");
-- retarder d'un jour la date d'arrivee dans l'hebergement de john micallef
Select Telephone from Herbergeur where idHerbergeur in (select Herbergeur_idHerbergeur from Hebergements where idHebergements=0002);
-- afficher le numéro de telephone de l'hebergeur de l'hebergement 0002
SELECT * FROM inner JOIN hebergement ON hebergeur.Hebergements_idHebergements = hebergement.idHebergements where idhebergements=0001;
select * from Client;